#include <iostream>
#include <vector>

using namespace std;

struct per 
{
	int begin, end;
};

bool point (per a, per b) 
{
	if (a.end > b.begin) 
	{
		per c = a;
		a = b;
		b = c;
	}
	if (a.end > b.begin)
		return true;
	else
		return false;
}

int main() 
{
	int n;{};
	vector <per> v;
	vector <vector <per> > rooms;
	while (cin >> n) {
		for (int i = 0; i < n; ++i) {
			per c;
			cin >> c.begin >> c.end;
			v.push_back(c);
		}
		for (int i = 0; i < v.size(); ++i) 
		{
			int room_result = -1;
			for (int j = 0; j < (int)rooms.size(); ++j) 
			{
				bool p = false;
				for (int q = 0; q < rooms[j].size(); ++q) 
				{
					if (point(rooms[j][q], v[i])) 
					{
						p = true;
						break;
					}
				}
				if (p == false) 
				{
					room_result = j;
					break;
				}
			}
			if (room_result == -1) 
			{
				vector<per> room_new(1, v[i]);
				rooms.push_back(room_new);
			}
			else
				rooms[room_result].push_back(v[i]);
		}
		cout << rooms.size() << endl;
	}
	system("pause");
	return 0;
}
